import requests
from model import *
import torch


#https://rapidapi.com/grammarbot/api/grammarbot-neural/

def get_response(inputSeq):
    modelPath = "testc.pkl"
    chatBot = ChatBot(modelPath, device=torch.device('cpu'))

    print("loading the model...")
    outputSeq = chatBot.predictByBeamSearch(inputSeq,isRandomChoose=True)
    # print("outputSeq", outputSeq)

    # 使用GrammarBot API检查和纠正outputSeq
    corrected_sentence = postprocessing(outputSeq)
    return corrected_sentence

def postprocessing(text):
    url = "https://grammarbot-neural.p.rapidapi.com/v1/check"
    payload = {
        "text": text,
        "lang": "en"
    }
    headers = {
        "content-type": "application/json",
        "X-RapidAPI-Key": "3497f40814msh0058b228992bd2cp111e11jsne2cb15b07f09",
        "X-RapidAPI-Host": "grammarbot-neural.p.rapidapi.com"
    }

    response = requests.post(url, json=payload, headers=headers)
    result = response.json()
    if 'correction' in result:
        corrected_sentence = result['correction']
    else:
        # 如果不存在'correction'键，打印错误并设置默认值或处理错误
        print("Error: 'correction' key not found in the response")
        corrected_sentence = text  # 或者选择其他错误处理方式

    return corrected_sentence

# get_response("i feel good")
